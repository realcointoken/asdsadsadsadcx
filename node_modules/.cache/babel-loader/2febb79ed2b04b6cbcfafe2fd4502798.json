{"ast":null,"code":"var _jsxFileName = \"/Users/nanoissuperior/ChainBridge/src/App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport PoolStats from \"./components/TransferCard.js\";\nimport Transferout from \"./components/TransferCardout.js\";\nimport Poolbutton from \"./components/Poolbutton.js\";\nimport Web3 from \"web3\";\nimport ConnectWallet from \"./components/Connectwallet.js\";\nimport qr from \"./qr.png\";\nconst web3 = new Web3(Web3.givenProvider);\n\nfunction App() {\n  const ethereum = window.ethereum;\n  const [addr, setAddr] = useState(\"\");\n  const [fundingScreen, setFundingScreen] = useState(1);\n  const [progress, setProgress] = useState();\n  const [progressBar, setProgressBar] = useState(\"10\");\n  checkProgress();\n\n  async function getAccount() {\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    const account = accounts[0];\n    setAddr(account);\n  }\n\n  function changeScreen(number) {\n    setFundingScreen(number);\n  }\n\n  function checkProgress() {\n    fetch(\"http://api.nanoissuperior.co.uk:4200/proxy/?action=account_balance&account=nano_374ebdxydfbdngnr6hibbs8mms7zs5t656pd5yjc7fsewp1n77dn8t75zkbd\").then(res => res.json()).then(result => {\n      checkPercentage(parseInt(result.balance) + parseInt(result.pending));\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }\n\n  async function checkPercentage(Number) {\n    const A = 5;\n    const B = 5000;\n    const percDiff = A / B * 100;\n    setProgressBar(toString(percDiff));\n  }\n\n  async function sendTransaction() {\n    const ethereum = window.ethereum;\n    const params = [{\n      from: addr,\n      to: \"null\",\n      gas: \"null\",\n      // 30400\n      gasPrice: \"0x9184e72a000\",\n      // 10000000000000\n      value: \"0x9184e72a\",\n      // 2441406250\n      data: \"null\"\n    }];\n    ethereum.request({\n      method: \"eth_sendTransaction\",\n      params\n    }).then(result => {// The result varies by by RPC method.\n      // For example, this method will return a transaction hash hexadecimal string on success.\n    }).catch(error => {// If the request fails, the Promise will reject with an error.\n    });\n  }\n\n  if (fundingScreen === 1) {\n    const progresses = progressBar;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"body\", {\n      className: \"bodyfund\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Goal 5,000 Nano\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"To help bring ChainBridge to life, we need your support.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: `${progresses}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => changeScreen(3),\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"joinpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Fund\")), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => changeScreen(2),\n      id: \"seeinter\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"joinpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"View the interface\"))));\n  } else if (fundingScreen === 2) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ConnectWallet, {\n      getAccount: () => getAccount(),\n      addr: addr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"body\", {\n      className: \"bodydapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Use this as a bridge for moving Nano to and from ethereum in the form of WNANO.\"), /*#__PURE__*/React.createElement(PoolStats, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => changeScreen(1),\n      id: \"seeinter\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"joinpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"Fund the project\")));\n  } else if (fundingScreen === 3) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"qrcode\",\n      src: qr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"nano_374ebdxydfbdngnr6hibbs8mms7zs5t656pd5yjc7fsewp1n77dn8t75zkbd\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: \"20%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => changeScreen(1),\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"joinpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => changeScreen(2),\n      id: \"seeinter\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"joinpool\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"View the interface\"))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nanoissuperior/ChainBridge/src/App.js"],"names":["React","useState","Header","PoolStats","Transferout","Poolbutton","Web3","ConnectWallet","qr","web3","givenProvider","App","ethereum","window","addr","setAddr","fundingScreen","setFundingScreen","progress","setProgress","progressBar","setProgressBar","checkProgress","getAccount","accounts","request","method","account","changeScreen","number","fetch","then","res","json","result","checkPercentage","parseInt","balance","pending","error","console","log","Number","A","B","percDiff","toString","sendTransaction","params","from","to","gas","gasPrice","value","data","catch","progresses","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport PoolStats from \"./components/TransferCard.js\";\nimport Transferout from \"./components/TransferCardout.js\";\n\nimport Poolbutton from \"./components/Poolbutton.js\";\nimport Web3 from \"web3\";\nimport ConnectWallet from \"./components/Connectwallet.js\";\nimport qr from \"./qr.png\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\nfunction App() {\n  const ethereum = window.ethereum;\n\n  const [addr, setAddr] = useState(\"\");\n  const [fundingScreen, setFundingScreen] = useState(1);\n  const [progress, setProgress] = useState();\n  const [progressBar, setProgressBar] = useState(\"10\");\n  checkProgress();\n\n  async function getAccount() {\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const account = accounts[0];\n    setAddr(account);\n  }\n  function changeScreen(number) {\n    setFundingScreen(number);\n  }\n  function checkProgress() {\n    fetch(\n      \"http://api.nanoissuperior.co.uk:4200/proxy/?action=account_balance&account=nano_374ebdxydfbdngnr6hibbs8mms7zs5t656pd5yjc7fsewp1n77dn8t75zkbd\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          checkPercentage(parseInt(result.balance) + parseInt(result.pending));\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n  async function checkPercentage(Number) {\n    const A = 5;\n    const B = 5000;\n\n    const percDiff = (A / B) * 100;\n    setProgressBar(toString(percDiff));\n  }\n  async function sendTransaction() {\n    const ethereum = window.ethereum;\n    const params = [\n      {\n        from: addr,\n        to: \"null\",\n        gas: \"null\", // 30400\n        gasPrice: \"0x9184e72a000\", // 10000000000000\n        value: \"0x9184e72a\", // 2441406250\n        data: \"null\",\n      },\n    ];\n    ethereum\n      .request({\n        method: \"eth_sendTransaction\",\n        params,\n      })\n      .then((result) => {\n        // The result varies by by RPC method.\n        // For example, this method will return a transaction hash hexadecimal string on success.\n      })\n      .catch((error) => {\n        // If the request fails, the Promise will reject with an error.\n      });\n  }\n  if (fundingScreen === 1) {\n    const progresses = progressBar;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n        </header>\n        <body className=\"bodyfund\">\n          <h1>Goal 5,000 Nano</h1>\n          <p>To help bring ChainBridge to life, we need your support.</p>\n\n          <div className=\"container6\">\n            <div className=\"meter\">\n              <span style={{ width: `${progresses}%` }}></span>\n            </div>\n          </div>\n          <div onClick={() => changeScreen(3)} className=\"container\">\n            <a id=\"joinpool\">Fund</a>\n          </div>\n          <div\n            onClick={() => changeScreen(2)}\n            id=\"seeinter\"\n            className=\"container\"\n          >\n            <a id=\"joinpool\">View the interface</a>\n          </div>\n        </body>\n      </div>\n    );\n  } else if (fundingScreen === 2) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n        </header>\n        <ConnectWallet getAccount={() => getAccount()} addr={addr} />\n        <body className=\"bodydapp\">\n          <p>\n            Use this as a bridge for moving Nano to and from ethereum in the\n            form of WNANO.\n          </p>\n          <PoolStats />\n        </body>\n        <div\n          onClick={() => changeScreen(1)}\n          id=\"seeinter\"\n          className=\"container\"\n        >\n          <a id=\"joinpool\">Fund the project</a>\n        </div>\n      </div>\n    );\n  } else if (fundingScreen === 3) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n        </header>\n        <body>\n          <img id=\"qrcode\" src={qr} />\n          <p>\n            nano_374ebdxydfbdngnr6hibbs8mms7zs5t656pd5yjc7fsewp1n77dn8t75zkbd\n          </p>\n\n          <div className=\"container6\">\n            <div className=\"meter\">\n              <span style={{ width: \"20%\" }}></span>\n            </div>\n          </div>\n          <div onClick={() => changeScreen(1)} className=\"container\">\n            <a id=\"joinpool\">Back</a>\n          </div>\n          <div\n            onClick={() => changeScreen(2)}\n            id=\"seeinter\"\n            className=\"container\"\n          >\n            <a id=\"joinpool\">View the interface</a>\n          </div>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}