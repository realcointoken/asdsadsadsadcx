{"ast":null,"code":"var _jsxFileName = \"/Users/nanoissuperior/Degen.finance/src/App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport PoolStats from \"./components/Poolstats.js\";\nimport EstimatedPoolPrize from \"./components/EstimatedPoolPrize.js\";\nimport Poolbutton from \"./components/Poolbutton.js\";\nimport Web3 from \"web3\";\nimport ConnectWallet from \"./components/Connectwallet.js\";\nconst web3 = new Web3(Web3.givenProvider);\n\nfunction App() {\n  const ethereum = window.ethereum;\n  const [addr, setAddr] = useState(\"\");\n\n  async function getAccount() {\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    const account = accounts[0];\n    setAddr(account);\n  }\n\n  async function sendTransaction() {\n    const ethereum = window.ethereum;\n    const params = [{\n      from: addr,\n      to: \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\n      gas: \"0x76c0\",\n      // 30400\n      gasPrice: \"0x9184e72a000\",\n      // 10000000000000\n      value: \"0x9184e72a\",\n      // 2441406250\n      data: \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n    }];\n    ethereum.request({\n      method: \"eth_sendTransaction\",\n      params\n    }).then(result => {// The result varies by by RPC method.\n      // For example, this method will return a transaction hash hexadecimal string on success.\n    }).catch(error => {// If the request fails, the Promise will reject with an error.\n    });\n  }\n\n  sendTransaction();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ConnectWallet, {\n    getAccount: () => getAccount(),\n    addr: addr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EstimatedPoolPrize, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PoolStats, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Poolbutton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nanoissuperior/Degen.finance/src/App.js"],"names":["React","useState","Header","PoolStats","EstimatedPoolPrize","Poolbutton","Web3","ConnectWallet","web3","givenProvider","App","ethereum","window","addr","setAddr","getAccount","accounts","request","method","account","sendTransaction","params","from","to","gas","gasPrice","value","data","then","result","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,CAASA,IAAI,CAACG,aAAd,CAAb;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,QAAQ,GAAGC,MAAM,CAACD,QAAxB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAec,UAAf,GAA4B;AAC1B,UAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiB;AACtCC,MAAAA,MAAM,EAAE;AAD8B,KAAjB,CAAvB;AAGA,UAAMC,OAAO,GAAGH,QAAQ,CAAC,CAAD,CAAxB;AACAF,IAAAA,OAAO,CAACK,OAAD,CAAP;AACD;;AACD,iBAAeC,eAAf,GAAiC;AAC/B,UAAMT,QAAQ,GAAGC,MAAM,CAACD,QAAxB;AACA,UAAMU,MAAM,GAAG,CACb;AACEC,MAAAA,IAAI,EAAET,IADR;AAEEU,MAAAA,EAAE,EAAE,4CAFN;AAGEC,MAAAA,GAAG,EAAE,QAHP;AAGiB;AACfC,MAAAA,QAAQ,EAAE,eAJZ;AAI6B;AAC3BC,MAAAA,KAAK,EAAE,YALT;AAKuB;AACrBC,MAAAA,IAAI,EACF;AAPJ,KADa,CAAf;AAWAhB,IAAAA,QAAQ,CACLM,OADH,CACW;AACPC,MAAAA,MAAM,EAAE,qBADD;AAEPG,MAAAA;AAFO,KADX,EAKGO,IALH,CAKSC,MAAD,IAAY,CAChB;AACA;AACD,KARH,EASGC,KATH,CASUC,KAAD,IAAW,CAChB;AACD,KAXH;AAYD;;AACDX,EAAAA,eAAe;AACf,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAE,MAAML,UAAU,EAA3C;AAA+C,IAAA,IAAI,EAAEF,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CALF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport PoolStats from \"./components/Poolstats.js\";\nimport EstimatedPoolPrize from \"./components/EstimatedPoolPrize.js\";\nimport Poolbutton from \"./components/Poolbutton.js\";\nimport Web3 from \"web3\";\nimport ConnectWallet from \"./components/Connectwallet.js\";\n\nconst web3 = new Web3(Web3.givenProvider);\n\nfunction App() {\n  const ethereum = window.ethereum;\n  const [addr, setAddr] = useState(\"\");\n\n  async function getAccount() {\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    const account = accounts[0];\n    setAddr(account);\n  }\n  async function sendTransaction() {\n    const ethereum = window.ethereum;\n    const params = [\n      {\n        from: addr,\n        to: \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\n        gas: \"0x76c0\", // 30400\n        gasPrice: \"0x9184e72a000\", // 10000000000000\n        value: \"0x9184e72a\", // 2441406250\n        data:\n          \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\",\n      },\n    ];\n    ethereum\n      .request({\n        method: \"eth_sendTransaction\",\n        params,\n      })\n      .then((result) => {\n        // The result varies by by RPC method.\n        // For example, this method will return a transaction hash hexadecimal string on success.\n      })\n      .catch((error) => {\n        // If the request fails, the Promise will reject with an error.\n      });\n  }\n  sendTransaction();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <ConnectWallet getAccount={() => getAccount()} addr={addr} />\n      <body>\n        <EstimatedPoolPrize />\n        <PoolStats />\n        <Poolbutton />\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}